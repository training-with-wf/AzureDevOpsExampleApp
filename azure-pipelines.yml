variables:
  projectDirectory: 'AzureDevOpsExampleApp'
trigger:
  - dev
jobs:
  - job: Android
    displayName: 'Android Build'
    pool:
      vmImage: 'macOS-latest'
    steps:
    - script: |
        ./gradlew bumperInit -PbumperVersionName=$(date +'%Y%m%d%H') -PbumperVersionCode=$(date +'%H')
      env:
        JAVA_HOME: $(JAVA_HOME_11_X64)
        PATH: $(JAVA_HOME_11_X64)/bin:$(PATH)
      displayName: Bump version
    - script: |
        ./gradlew assemble
      env:
        JAVA_HOME: $(JAVA_HOME_11_X64)
        PATH: $(JAVA_HOME_11_X64)/bin:$(PATH)
      displayName: Create Apk

    - task: CopyFiles@2
      condition: true
      inputs:
        contents: '**/?(*.apk)'
        targetFolder: '$(build.artifactStagingDirectory)'
        flattenFolders: true

    - task: AndroidSigning@3
      inputs:
        apkFiles: '$(build.artifactStagingDirectory)/?(app-debug.apk)'
        apksignerKeystoreFile: 'key.keystore'
        apksignerKeystorePassword: '$(keystorePassword)'
        apksignerKeystoreAlias: 'key'
        apksignerKeyPassword: '$(keyPassword)'
        apksignerArguments: "--min-sdk-version 23"
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Android Artifacts'
      condition: true
      inputs:
        PathtoPublish: $(build.artifactStagingDirectory)
        ArtifactName: "dev"
    - task: AppCenterDistribute@3
      inputs:
        serverEndpoint: 'AzureDevOpsExampleAppAndroidDev'
        appSlug: 'training.with.wf/AzureDevOpsExampleApp'
        appFile: '$(build.artifactStagingDirectory)/app-debug.apk'
        symbolsOption: 'android'
        releaseNotesOption: 'input' 
        releaseNotesInput: 'New apk release'